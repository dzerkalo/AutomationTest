<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="6" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="regression" duration-ms="58744" started-at="2016-02-13T19:05:22Z" finished-at="2016-02-13T19:06:21Z">
    <groups>
    </groups>
    <test name="packages" duration-ms="58744" started-at="2016-02-13T19:05:22Z" finished-at="2016-02-13T19:06:21Z">
      <class name="tests.components.login_page.LoginTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeClass" is-config="true" duration-ms="22607" started-at="2016-02-13T21:05:22Z" finished-at="2016-02-13T21:05:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeBaseMethod(java.lang.reflect.Method)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeBaseMethod" is-config="true" duration-ms="3752" started-at="2016-02-13T21:05:45Z" finished-at="2016-02-13T21:05:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.components.login_page.LoginTest.canLoginWithValidCredentials()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeMethod" is-config="true" duration-ms="2" started-at="2016-02-13T21:05:49Z" finished-at="2016-02-13T21:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="canLoginWithValidCredentials()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="canLoginWithValidCredentials" duration-ms="18201" started-at="2016-02-13T21:05:49Z" finished-at="2016-02-13T21:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canLoginWithValidCredentials -->
        <test-method status="PASS" signature="afterBaseMethod(org.testng.ITestResult)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="afterBaseMethod" is-config="true" duration-ms="15" started-at="2016-02-13T21:06:07Z" finished-at="2016-02-13T21:06:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=canLoginWithValidCredentials status=SUCCESS method=LoginTest.canLoginWithValidCredentials()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseMethod -->
        <test-method status="PASS" signature="beforeBaseMethod(java.lang.reflect.Method)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeBaseMethod" is-config="true" duration-ms="1071" started-at="2016-02-13T21:06:07Z" finished-at="2016-02-13T21:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.components.login_page.LoginTest.canNotLoginWithIncorrectLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-13T21:06:08Z" finished-at="2016-02-13T21:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="canNotLoginWithIncorrectLogin()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="canNotLoginWithIncorrectLogin" duration-ms="3023" started-at="2016-02-13T21:06:08Z" finished-at="2016-02-13T21:06:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canNotLoginWithIncorrectLogin -->
        <test-method status="PASS" signature="afterBaseMethod(org.testng.ITestResult)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="afterBaseMethod" is-config="true" duration-ms="10" started-at="2016-02-13T21:06:11Z" finished-at="2016-02-13T21:06:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=canNotLoginWithIncorrectLogin status=SUCCESS method=LoginTest.canNotLoginWithIncorrectLogin()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseMethod -->
        <test-method status="PASS" signature="beforeBaseMethod(java.lang.reflect.Method)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeBaseMethod" is-config="true" duration-ms="1157" started-at="2016-02-13T21:06:11Z" finished-at="2016-02-13T21:06:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.components.login_page.LoginTest.shouldAlertAppearsIfLogInWithEmptyCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2016-02-13T21:06:12Z" finished-at="2016-02-13T21:06:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldAlertAppearsIfLogInWithEmptyCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="shouldAlertAppearsIfLogInWithEmptyCredentials" duration-ms="411" started-at="2016-02-13T21:06:12Z" data-provider="credentials" finished-at="2016-02-13T21:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Qw1111]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAlertAppearsIfLogInWithEmptyCredentials -->
        <test-method status="PASS" signature="afterBaseMethod(org.testng.ITestResult)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="afterBaseMethod" is-config="true" duration-ms="11" started-at="2016-02-13T21:06:13Z" finished-at="2016-02-13T21:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldAlertAppearsIfLogInWithEmptyCredentials status=SUCCESS method=LoginTest.shouldAlertAppearsIfLogInWithEmptyCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseMethod -->
        <test-method status="PASS" signature="beforeBaseMethod(java.lang.reflect.Method)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeBaseMethod" is-config="true" duration-ms="625" started-at="2016-02-13T21:06:13Z" finished-at="2016-02-13T21:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.components.login_page.LoginTest.shouldAlertAppearsIfLogInWithEmptyCredentials(java.lang.String,java.lang.String)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2016-02-13T21:06:13Z" finished-at="2016-02-13T21:06:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="shouldAlertAppearsIfLogInWithEmptyCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="shouldAlertAppearsIfLogInWithEmptyCredentials" duration-ms="311" started-at="2016-02-13T21:06:13Z" data-provider="credentials" finished-at="2016-02-13T21:06:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[minchekov160@hotmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shouldAlertAppearsIfLogInWithEmptyCredentials -->
        <test-method status="PASS" signature="afterBaseMethod(org.testng.ITestResult)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="afterBaseMethod" is-config="true" duration-ms="11" started-at="2016-02-13T21:06:14Z" finished-at="2016-02-13T21:06:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=shouldAlertAppearsIfLogInWithEmptyCredentials status=SUCCESS method=LoginTest.shouldAlertAppearsIfLogInWithEmptyCredentials(java.lang.String, java.lang.String)[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.components.login_page.LoginTest@3fd2322d]" name="afterSuite" is-config="true" duration-ms="474" started-at="2016-02-13T21:06:14Z" finished-at="2016-02-13T21:06:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.components.login_page.LoginTest -->
      <class name="tests.components.profile_page.EditProfileTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.components.profile_page.EditProfileTest@56ac5c80]" name="beforeClass" is-config="true" duration-ms="31311" started-at="2016-02-13T21:05:22Z" finished-at="2016-02-13T21:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeBaseMethod(java.lang.reflect.Method)[pri:0, instance:tests.components.profile_page.EditProfileTest@56ac5c80]" name="beforeBaseMethod" is-config="true" duration-ms="18794" started-at="2016-02-13T21:05:54Z" finished-at="2016-02-13T21:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.components.profile_page.EditProfileTest.canEditProfileWithValidValues(framework.dataobjects.ProfileData)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseMethod -->
        <test-method status="PASS" signature="canEditProfileWithValidValues(framework.dataobjects.ProfileData)[pri:0, instance:tests.components.profile_page.EditProfileTest@56ac5c80]" name="canEditProfileWithValidValues" duration-ms="8033" started-at="2016-02-13T21:06:13Z" data-provider="profile" finished-at="2016-02-13T21:06:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[ProfileData{firstName='lI', lastName='mM', companyName='Iq', website='http://www.l.c', title='p', phone='0684592', timeZone=AFRICA_ABIDJAN, itemsPerPage=20, maxFileAge=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canEditProfileWithValidValues -->
        <test-method status="PASS" signature="afterBaseMethod(org.testng.ITestResult)[pri:0, instance:tests.components.profile_page.EditProfileTest@56ac5c80]" name="afterBaseMethod" is-config="true" duration-ms="7" started-at="2016-02-13T21:06:21Z" finished-at="2016-02-13T21:06:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=canEditProfileWithValidValues status=SUCCESS method=EditProfileTest.canEditProfileWithValidValues(framework.dataobjects.ProfileData)[pri:0, instance:tests.components.profile_page.EditProfileTest@56ac5c80] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.components.profile_page.EditProfileTest@56ac5c80]" name="afterSuite" is-config="true" duration-ms="534" started-at="2016-02-13T21:06:21Z" finished-at="2016-02-13T21:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.components.profile_page.EditProfileTest -->
      <class name="tests.components.home_page.HomePageTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:tests.components.home_page.HomePageTest@2e1af49b]" name="beforeClass" is-config="true" duration-ms="13722" started-at="2016-02-13T21:05:22Z" finished-at="2016-02-13T21:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeBaseMethod(java.lang.reflect.Method)[pri:0, instance:tests.components.home_page.HomePageTest@2e1af49b]" name="beforeBaseMethod" is-config="true" duration-ms="20521" started-at="2016-02-13T21:05:36Z" finished-at="2016-02-13T21:05:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.components.home_page.HomePageTest.canVerifyContentOfHomePage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeBaseMethod -->
        <test-method status="PASS" signature="canVerifyContentOfHomePage()[pri:0, instance:tests.components.home_page.HomePageTest@2e1af49b]" name="canVerifyContentOfHomePage" duration-ms="66" started-at="2016-02-13T21:05:57Z" finished-at="2016-02-13T21:05:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- canVerifyContentOfHomePage -->
        <test-method status="PASS" signature="afterBaseMethod(org.testng.ITestResult)[pri:0, instance:tests.components.home_page.HomePageTest@2e1af49b]" name="afterBaseMethod" is-config="true" duration-ms="18" started-at="2016-02-13T21:05:57Z" finished-at="2016-02-13T21:05:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=canVerifyContentOfHomePage status=SUCCESS method=HomePageTest.canVerifyContentOfHomePage()[pri:0, instance:tests.components.home_page.HomePageTest@2e1af49b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterBaseMethod -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:tests.components.home_page.HomePageTest@2e1af49b]" name="afterSuite" is-config="true" duration-ms="1212" started-at="2016-02-13T21:05:57Z" finished-at="2016-02-13T21:05:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- tests.components.home_page.HomePageTest -->
    </test> <!-- packages -->
  </suite> <!-- regression -->
</testng-results>
